upstream backend {
    server django_container:8000;
}

server {
    listen 8080;

    # Proxy all API requests to the backend Django service
    location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $http_host;
    }

    # Proxy all API requests to the backend Django service
    location ~^/books(/|$|/*) {
        proxy_pass http://backend;
        proxy_set_header Host $http_host;
    }


    # Proxy Django admin requests with or without trailing slash
    location ~^/admin(/|$) {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Serve React frontend from the build directory for non-API and non-admin paths
    location / {
        root /var/www/frontend;  # Ensure this path points to the correct React build directory
        try_files $uri $uri/ /index.html =404;  # Prevent infinite loop by returning 404 for missing files
    }

    # Catch all unmatched routes and forward to the frontend
    location /index.html {
        root /var/www/frontend;  # Ensure this path points to the correct React build directory
        try_files $uri =404;  # Serve index.html for React routing, but avoid infinite redirects
    }

    # Serve Django static files (e.g., for the admin page CSS)
    location /static/ {
        alias /var/www/staticfiles/;  # Location where collectstatic places files
        expires 30d;  # Cache static files for 30 days
        add_header Cache-Control "public";
    }

    # Serve Django media files (if needed)
    location /media/ {
        alias /var/www/media/;  # Correct path for media files
        try_files $uri $uri/ /index.html =404;  # Prevent infinite loop by returning 404 for missing files
        autoindex on;  # Optional: allows directory listing (for debugging purposes)
    }
}
