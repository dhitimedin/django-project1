version: "3.8"
services:
  db:
    image: postgres:16.4-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: postgres_db
    ports:
      - "5432:5432"
    command: >
      sh -c "
      chown -R 999:999 /var/lib/postgresql/data &&
      docker-entrypoint.sh postgres"
    networks:
      app_net:
        ipv4_address: 192.168.0.2
  app:
    build: .
    volumes:
      - .:/django
    ports:
      - 8000:8000
    image: app:django
    container_name: django_container
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
      - DJANGO_SETTINGS_MODULE=core.settings  # Add this line
    command: >
      sh -c "
      until pg_isready -h db -p 5432; do
        echo Waiting for postgres;
        sleep 2;
      done;
      python manage.py migrate &&
      python create_superuser.py &&
      gunicorn core.wsgi --bind 0.0.0.0:8000"
    depends_on:
      - db
    networks:
      app_net:
        ipv4_address: 192.168.0.4

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:latest
    restart: always
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
      - SERVER_MODE=True    # Add this line
      - CSRF_COOKIE_SECURE=False  # Add this line
    ports:
      - "5050:80"
    networks:
      app_net:
        ipv4_address: 192.168.0.3

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"
          gateway: "192.168.0.1"