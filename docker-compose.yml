version: "3.8"
services:
  db:
    image: postgres:16.4-alpine
    volumes:
      - ./django/data/db:/var/lib/postgresql/data
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: postgres_db
    ports:
      - "5432:5432"
    command: >
      sh -c "
      chown -R 999:999 /var/lib/postgresql/data &&
      docker-entrypoint.sh postgres"
    networks:
      app_net:
        ipv4_address: 192.168.0.2

  backend:
    build: ./django
    volumes:
      - ./django:/django
      - ./django/staticfiles:/django/staticfiles # For static files
    image: backend:django
    container_name: django_container
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
      - DJANGO_SETTINGS_MODULE=core.settings
    command: >
      sh -c "
      until pg_isready -h db -p 5432; do
        echo Waiting for postgres;
        sleep 2;
      done;
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python create_superuser.py &&
      gunicorn core.wsgi --bind 0.0.0.0:8000"
    depends_on:
      - db
    networks:
      app_net:
        ipv4_address: 192.168.0.4

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:latest
    restart: always
    volumes:
      - ./django/data/pgadmin:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
      - SERVER_MODE=True
      - CSRF_COOKIE_SECURE=False
    ports:
      - "5050:80"
    networks:
      app_net:
        ipv4_address: 192.168.0.3

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
      - ./frontend/build:/frontend/build
    container_name: react_container
    command: sh -c "npm install && npm run build && npm start"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      app_net:
        ipv4_address: 192.168.0.6

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - 80:8080
    volumes:
      - ./frontend/build:/var/www/frontend
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf
      - ./django/staticfiles:/var/www/staticfiles # Serve static files
      - ./django/media:/var/www/media # Serve uploaded files
    depends_on:
      - frontend
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      app_net:
        ipv4_address: 192.168.0.5

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"
          gateway: "192.168.0.1"
